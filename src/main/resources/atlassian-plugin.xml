<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}" />
        <param name="plugin-icon">images/pluginIcon.png</param>
        <param name="plugin-logo">images/pluginLogo.png</param>
    </plugin-info>

    <!-- add our i18n resource -->
    <resource type="i18n" name="i18n" location="stashbot"/>

    <!-- add our web resources -->
    <web-resource key="stashbot-resources" name="Stashbot Web Resources">
        <dependency>com.atlassian.auiplugin:ajs</dependency>
        <dependency>com.atlassian.auiplugin:aui-experimental-expander</dependency>
        <dependency>com.atlassian.auiplugin:aui-experimental-iconfont</dependency>
        <dependency>com.atlassian.auiplugin:aui-experimental-tooltips</dependency>
        <dependency>com.atlassian.auiplugin:aui-form-notification</dependency>
        <dependency>com.atlassian.auiplugin:aui-form-validation</dependency>
        <dependency>com.atlassian.auiplugin:dialog2</dependency>

        <resource type="download" name="stashbot.css" location="/css/stashbot.css"/>
        <resource type="download" name="stashbot.js" location="/js/stashbot.js"/>
        <resource type="download" name="images/" location="/images"/>

        <context>stashbot</context>
    </web-resource>

    <!-- AO resources to persiste configuration data -->
    <ao key="ao-module">
        <description>The AO module for this plugin.</description>
        <entity>com.palantir.stash.stashbot.persistence.JenkinsServerConfiguration</entity>
        <entity>com.palantir.stash.stashbot.persistence.PullRequestMetadata</entity>
        <entity>com.palantir.stash.stashbot.persistence.RepositoryConfiguration</entity>
        <entity>com.palantir.stash.stashbot.persistence.JobTemplate</entity>
        <entity>com.palantir.stash.stashbot.persistence.JobMapping</entity>
        <entity>com.palantir.stash.stashbot.persistence.JobTypeStatusMapping</entity>
        <upgradeTask>com.palantir.stash.stashbot.upgrade.ConfigurationV1UpgradeTask</upgradeTask>
        <upgradeTask>com.palantir.stash.stashbot.upgrade.ConfigurationV2UpgradeTask</upgradeTask>
    </ao>

    <servlet key="repositoryConfigurationAdmin" name="Repository Administration Servlet" class="com.palantir.stash.stashbot.servlet.RepoConfigurationServlet">
        <url-pattern>/stashbot/repo-admin/*</url-pattern>
    </servlet>
    
    <servlet key="repositoryConfigurationStatus" name="Repository Configuration Status Servlet" class="com.palantir.stash.stashbot.servlet.RepoConfigurationStatusServlet">
        <url-pattern>/stashbot/repo-status/*</url-pattern>
    </servlet>

    <servlet key="jenkinsConfigurationAdmin" name="Jenkins Administration Servlet" class="com.palantir.stash.stashbot.servlet.JenkinsConfigurationServlet">
        <url-pattern>/stashbot/jenkins-admin*</url-pattern>
    </servlet>

    <servlet key="buildSuccessReporting" name="Build Success Reporting Servlet" class="com.palantir.stash.stashbot.servlet.BuildSuccessReportingServlet">
        <url-pattern>/stashbot/build-reporting/*</url-pattern>
    </servlet>

    <servlet key="buildStatusReporting" name="Build Status Reporting Servlet" class="com.palantir.stash.stashbot.servlet.BuildStatusReportingServlet">
        <url-pattern>/stashbot/build-status/*</url-pattern>
    </servlet>

    <servlet key="buildTriggerServlet" name="Build Trigger Servlet" class="com.palantir.stash.stashbot.servlet.BuildTriggerServlet">
        <url-pattern>/stashbot/build-trigger/*</url-pattern>
    </servlet>

    <stash-resource key="stashbotConfigurationResources" name="Stashbot Configuration Panel Resources">
        <directory location="/static/">
          <exclude>/**/*-min.*</exclude>
        </directory>
        <context>plugin.page.stashbot</context>
        <dependency>com.atlassian.stash.stash-web-plugin:global</dependency>
    </stash-resource>

    <web-item key="repository-configuration-admin" name="Stashbot Repository Admin Panel" weight="20" section="stash.repository.settings.panel">
        <conditions type="OR">
            <condition class="com.atlassian.stash.web.conditions.HasRepositoryPermissionCondition">
                <param name="permission">REPO_ADMIN</param>
            </condition>
            <condition class="com.atlassian.stash.web.conditions.HasGlobalPermissionCondition">
                <param name="permission">SYS_ADMIN</param>
            </condition>
        </conditions>
        <label key="plugin.page.repo.ci.info.tab.label">Stashbot CI Admin</label>
        <tooltip key="plugin.page.repo.ci.sys.info.tab.tooltip">View Continuous Integration Properties</tooltip>
        <link>/plugins/servlet/stashbot/repo-admin/${repository.project.key}/${repository.slug}</link>
    </web-item>

    <web-item key="jenkins-configuration-admin" name="Stashbot Jenkins Admin Panel" weight="20" section="atl.admin/admin-settings-section" application="stash">
        <condition class="com.atlassian.stash.web.conditions.HasGlobalPermissionCondition">
            <param name="permission">SYS_ADMIN</param>
        </condition>
        <label key="plugin.page.repo.ci.info.tab.label">Stashbot Jenkins Admin</label>
        <tooltip key="plugin.page.repo.ci.sys.info.tab.tooltip">View Jenkins Configuration Options</tooltip>
        <link>/plugins/servlet/stashbot/jenkins-admin</link>
    </web-item>


    <web-section key="build-action-section"  name="Section for displaying build actions" weight="250" location="stash.commits.extras">
        <label key="build-action-section-label">Build Actions</label>
        <condition class="com.palantir.stash.stashbot.webpanel.IsCiEnabledForRepoCondition"/>
    </web-section>

    <web-panel key="build-retrigger-panel"  name="Panel to display per-commit retrigger links" location="build-action-section" class="com.palantir.stash.stashbot.webpanel.RetriggerLinkWebPanel">
        <label key="build-retrigger-panel-label">Re-verify</label>
        <condition class="com.palantir.stash.stashbot.webpanel.IsCiEnabledForRepoCondition"/>
    </web-panel>

    <!-- tried to write this as a client-web-panel, but that was annoying as crap, so this janky solution was easier.  Forgive me. -->
    <web-resource key="pullRequestTriggerResources" name="Pull Request Trigger Link Resources">
        <dependency>com.atlassian.auiplugin:ajs</dependency>
        <dependency>stash.web.resources:jquery</dependency>
        <resource type="download" name="pr-trigger.js" location="js/pr-trigger.js"/>
        <context>stash.page.pullRequest.view</context>
    </web-resource>

    <!-- import from the product container -->
    <component-import key="activeObjects" interface="com.atlassian.activeobjects.external.ActiveObjects" />
    <component-import key="applicationPropertiesService" interface="com.atlassian.stash.server.ApplicationPropertiesService"/>
    <component-import key="buildStatusService" interface="com.atlassian.stash.build.BuildStatusService"/>
    <component-import key="commitService" interface="com.atlassian.stash.commit.CommitService"/>
    <component-import key="gitCommandBuilderFactory" interface="com.atlassian.stash.scm.git.GitCommandBuilderFactory"/>
    <component-import key="loginUriProvider" interface="com.atlassian.sal.api.auth.LoginUriProvider"/>
    <component-import key="navBuilder" interface="com.atlassian.stash.nav.NavBuilder" />
    <component-import key="pageBuilderService" interface="com.atlassian.webresource.api.assembler.PageBuilderService"/>
    <component-import key="permissionAdminService" interface="com.atlassian.stash.user.PermissionAdminService"/>
    <component-import key="projectService" interface="com.atlassian.stash.project.ProjectService"/>
    <component-import key="pullRequestService" interface="com.atlassian.stash.pull.PullRequestService"/>
    <component-import key="repositoryHookService" interface="com.atlassian.stash.hook.repository.RepositoryHookService"/>
    <component-import key="repositoryService" interface="com.atlassian.stash.repository.RepositoryService"/>
    <component-import key="securityService" interface="com.atlassian.stash.user.SecurityService"/>
    <component-import key="soyTemplateRenderer" interface="com.atlassian.soy.renderer.SoyTemplateRenderer"/>
    <component-import key="userAdminService" interface="com.atlassian.stash.user.UserAdminService"/>
    <component-import key="userManager" interface="com.atlassian.sal.api.user.UserManager"/>
    <component-import key="userService" interface="com.atlassian.stash.user.UserService"/>

    <!--
    com.atlassian.stash.web.conditions.HasGlobalPermissionCondition
    com.atlassian.stash.web.conditions.HasRepositoryPermissionCondition

    These two classes are included as components automatically because they are used in the XML above
    However they depend upon PermissionService which is not included automatically as a transitive dependency, so we need this:
    -->
    <component-import key="permissionService" interface="com.atlassian.stash.user.PermissionService"/>
    <component-import key="permissionValidationService" interface="com.atlassian.stash.user.PermissionValidationService"/>
    <component-import key="eventPublisher" interface="com.atlassian.event.api.EventPublisher"/>

    <component key="commandOutputHandlerFactory" class="com.palantir.stash.stashbot.outputhandler.CommandOutputHandlerFactory" />
    <component key="configurationPersistenceService" class="com.palantir.stash.stashbot.config.ConfigurationPersistenceImpl" interface="com.palantir.stash.stashbot.config.ConfigurationPersistenceService" />
    <component key="jenkinsClientManager" class="com.palantir.stash.stashbot.managers.JenkinsClientManager" />
    <component key="jenkinsJobXmlFormatter" class="com.palantir.stash.stashbot.jobtemplate.JenkinsJobXmlFormatter" />
    <component key="jenkinsManager" class="com.palantir.stash.stashbot.managers.JenkinsManager" />
    <component key="jobTemplateManager" class="com.palantir.stash.stashbot.jobtemplate.JobTemplateManager" />
    <component key="pluginUserManager" class="com.palantir.stash.stashbot.managers.PluginUserManager" />
    <component key="pullRequestListener" class="com.palantir.stash.stashbot.hooks.PullRequestListener" />
    <component key="stashbotLoggerFactory" class="com.palantir.stash.stashbot.logger.PluginLoggerFactory"/>
    <component key="stashbotUrlBuilder" class="com.palantir.stash.stashbot.urlbuilder.StashbotUrlBuilder"/>
    <component key="velocityManager" class="com.palantir.stash.stashbot.managers.VelocityManager" />
    <component key="txProcessor" name="Transactional Annotation Processor" class="com.atlassian.activeobjects.external.TransactionalAnnotationProcessor">
        <description>Processes @Transactional annotations.</description>
    </component>

    <merge-check key="pullRequestBuildSuccessMergeCheck" class="com.palantir.stash.stashbot.hooks.PullRequestBuildSuccessMergeCheck" />

    <post-receive-hook key="triggerJenkinsBuildHook" name="Jenkins Build Trigger Hook" class="com.palantir.stash.stashbot.hooks.TriggerJenkinsBuildHook">
        <description>Hook for triggering verification builds in jenkins when pushes occur</description>
        <icon>icons/example.png</icon>
    </post-receive-hook>
</atlassian-plugin>

{namespace plugin.page.stashbot}

/**
 * @param relUrl
 * @param jenkinsConfigs
 * @param error
 * @param notice
 * @param authenticationModeData
 * Xparam authenticationModeDataSelected
 **/
{template .jenkinsConfigurationPanel}
<html>
<head>
    <meta name="decorator" content="atl.admin">
    <title>Stashbot Jenkins Server Configuration</title>
</head>
<body>
{if $error}
  <div style="color: #BF3333; background-color: #DDDDDD"><div style="padding: 15px"><b>ERROR:</b> {$error}</div></div>
{/if}
{if $notice}
  <div style="color: #BF3333; background-color: #DDDDDD"><div style="padding: 15px"><b>NOTICE:</b> {$notice}</div></div>
{/if}

{call aui.group.group}
    {param content}
        {call aui.group.item}
            {param content}
                <h2>Stashbot Administrative Tasks</h2>
                <ul>
                <li>Create any plans that don't already exist <a href="{$relUrl}/create-new/.">HERE</a></li>
                <li>Update/Create all plans <a href="{$relUrl}/reload-all/.">HERE</a></li>
                </ul>
            {/param}
        {/call}
    {/param}
{/call}
{call aui.group.group}
    {param content}
        {call aui.group.item}
            {param content}
                <h2>Stashbot Jenkins Settings</h2>
            {/param}
        {/call}
    {/param}
{/call}
{call aui.group.group}
    {param content}
      {foreach $jenkinsConfig in $jenkinsConfigs}
        <h3>{$jenkinsConfig.name}</h3>
        {call aui.form.form}
          {param action: $relUrl /}
          {param content}
            {call aui.form.textField}
              {param id: 'name' /}
              {param labelContent: 'Jenkins Server Name' /}
              {param value: $jenkinsConfig.name /}
              {param descriptionText: 'Jenkins Server Name (referred to in the repository configuration)' /}
            {/call}
            {call aui.form.textField}
              {param id: 'url' /}
              {param labelContent: 'Jenkins URL' /}
              {param value: $jenkinsConfig.url /}
              {param descriptionText: 'Jenkins URL (e.g. http://jenkins.example.com:1234/)' /}
            {/call}
            {call aui.form.selectField}
              {param id: 'authenticationMode' /}
              {param labelContent: 'Bitbucket Authentication Mode' /}
              {param options: $authenticationModeData[$jenkinsConfig.name] /}
              {param value: $jenkinsConfig.authenticationModeStr /}
              {param descriptionText: 'Bitbucket Authentication Mode' /}
            {/call}
            {call aui.form.textField}
              {param id: 'username' /}
              {param labelContent: 'Jenkins Username' /}
              {param value: $jenkinsConfig.username /}
              {param descriptionText: 'Jenkins Username' /}
            {/call}
            {call aui.form.passwordField}
              {param id: 'password' /}
              {param labelContent: 'Jenkins Password' /}
              {param value: $jenkinsConfig.password /}
              {param descriptionText: 'Jenkins Password' /}
            {/call}
            {call aui.form.textField}
              {param id: 'stashUsername' /}
              {param labelContent: 'Bitbucket Username' /}
              {param value: $jenkinsConfig.stashUsername /}
              {param descriptionText: 'Bitbucket Username' /}
            {/call}
            {call aui.form.passwordField}
              {param id: 'stashPassword' /}
              {param labelContent: 'Bitbucket Password' /}
              {param value: $jenkinsConfig.stashPassword /}
              {param descriptionText: 'Bitbucket Password' /}
            {/call}
            {call aui.form.textField}
              {param id: 'maxVerifyChain' /}
              {param labelContent: 'Maximum number of commits to verify on a single push' /}
              {param value: ($jenkinsConfig.maxVerifyChain == 0 ? '0' : $jenkinsConfig.maxVerifyChain) /}
              {param descriptionText: 'Maximum number of commits to verify on a single push' /}
            {/call}
            {call aui.form.checkboxField}
              {param legendContent: 'Enable Folders (Requires Plugin)' /}
              {param fields: [[
                'id': 'foldersEnabled',
                'labelText': 'Folders Enabled',
                'isChecked': $jenkinsConfig.folderSupportEnabled
                ]] /}
            {/call}
            {call aui.form.checkboxField}
              {param legendContent: 'Use SubFolders' /}
              {param fields: [[
                'id': 'subfoldersEnabled',
                'labelText': 'SubFolders Enabled',
                'isChecked': $jenkinsConfig.useSubFolders
                ]] /}
            {/call}
            {call aui.form.textField}
              {param id: 'folderPrefix' /}
              {param labelContent: 'Folder Prefix (all jobs stored under this prefix)' /}
              {param value: $jenkinsConfig.folderPrefix /}
              {param descriptionText: 'Prefix to store jobs under' /}
            {/call}
            {call aui.form.checkboxField}
              {param legendContent: 'Lock projects into this configuration' /}
              {param fields: [[
                'id': 'locked',
                'labelText': 'Locked',
                'isChecked': $jenkinsConfig.locked
                ]] /}
            {/call}
            {call aui.form.buttons}
              {param content}
                {call aui.form.submit}
	              {param id: 'submit' /}
	              {param text: 'Save' /}
	              {param type: 'submit' /}
	            {/call}
	          {/param}
            {/call}
            /* bitbucket.INTERNAL.buttons.button => ...uh oh?  */
	    {call bitbucket.internal.buttons.button}
              {param id: 'delete' /}
              {param buttonText: 'Delete Entry ' + $jenkinsConfig.name /}
              {param href: $relUrl + '/delete/' + $jenkinsConfig.name /}
            {/call}
          {/param}
        {/call}
      {/foreach}
        <h3>New Jenkins Server</h3>
        {call aui.form.form}
          {param action: $relUrl /}
          {param content}
            {call aui.form.textField}
              {param id: 'name' /}
              {param labelContent: 'Jenkins Server Name' /}
              {param value: 'enter name here [a-zA-Z0-9]+' /}
              {param descriptionText: 'Jenkins Server Name (referred to in the repository configuration)' /}
            {/call}
            {call aui.form.textField}
              {param id: 'url' /}
              {param labelContent: 'Jenkins URL' /}
              {param value: 'http://jenkins.example.com:8080/' /}
              {param descriptionText: 'Jenkins URL (e.g. http://jenkins.example.com:1234/)' /}
            {/call}
            {call aui.form.selectField}
              {param id: 'authenticationMode' /}
              {param labelContent: 'Bitbucket Authentication Mode' /}
              {param options: $authenticationModeData['default'] /}
              {param descriptionText: 'Bitbucket Authentication Mode' /}
            {/call}
            {call aui.form.textField}
              {param id: 'username' /}
              {param labelContent: 'Jenkins Username' /}
              {param value: 'jenkins_user' /}
              {param descriptionText: 'Jenkins Username' /}
            {/call}
            {call aui.form.passwordField}
              {param id: 'password' /}
              {param labelContent: 'Jenkins Password' /}
              {param value: 'jenkins_password' /}
              {param descriptionText: 'Jenkins Password' /}
            {/call}
            {call aui.form.textField}
              {param id: 'stashUsername' /}
              {param labelContent: 'Bitbucket Username' /}
              {param value: 'stash_user' /}
              {param descriptionText: 'Bitbucket Username' /}
            {/call}
            {call aui.form.passwordField}
              {param id: 'stashPassword' /}
              {param labelContent: 'Bitbucket Password' /}
              {param value: 'stash_password' /}
              {param descriptionText: 'Bitbucket Password' /}
            {/call}
            {call aui.form.textField}
              {param id: 'maxVerifyChain' /}
              {param labelContent: 'Maximum number of commits to verify on a single push' /}
              {param value: '10' /}
              {param descriptionText: 'Maximum number of commits to verify on a single push' /}
            {/call}
            {call aui.form.checkboxField}
              {param legendContent: 'Enable Folders (Requires Plugin)' /}
              {param fields: [[
                'id': 'foldersEnabled',
                'labelText': 'Folders Enabled',
                ]] /}
            {/call}
            {call aui.form.checkboxField}
              {param legendContent: 'Use SubFolders' /}
              {param fields: [[
                'id': 'subfoldersEnabled',
                'labelText': 'SubFolders Enabled',
                ]] /}
            {/call}
            {call aui.form.textField}
              {param id: 'folderPrefix' /}
              {param labelContent: 'Folder Prefix (all jobs stored under this prefix)' /}
              {param descriptionText: 'Prefix to store jobs under' /}
            {/call}
            {call aui.form.checkboxField}
              {param legendContent: 'Lock projects into this configuration' /}
              {param fields: [[
                'id': 'locked',
                'labelText': 'Locked',
                ]] /}
            {/call}
            {call aui.form.buttons}
              {param content}
                {call aui.form.submit}
	              {param id: 'submit' /}
	              {param text: 'Save' /}
	              {param type: 'submit' /}
	            {/call}
	          {/param}
            {/call}
          {/param}
        {/call}
    {/param}
{/call}
<div>
<h3>Configuring Jenkins:</h3>
<p>
Jenkins configurations include the following fields:
<ul>
<li><b>name</b>: The name users will see when they select this jenkins server</li>
<li><b>url</b>: The URL for the jenkins instance.  (e.g. https://jenkins.example.com:8080/)</li>
<li><b>Authentication Mode</b>: The authentication mode to use for jenkins to
talk back to Bitbucket.  If you select Manual Credentials, create it in jenkins first then add the UUID of the credential in the password field, while using a valid username for bitbucket in the username field (which is still used for comments on pull requests, etc.)</li>
<li><b>username</b>: The username to use to log into jenkins (value is ignored if authentication is not enabled).
<li><b>password</b>: The password to use to log into jenkins (value is ignored if authentication is not enabled).
<li><b>Bitbucket Username</b>: The username to use to log into bitbucket from jenkins (for cloning repos and reporting build results).  This account is automatically created if it does not exist already.  It is recommended you generate a reasonable username/password pair.  If you prefer for auditing purposes, you may use an account from crowd/LDAP by using the existing credentials in this field.</li>
<li><b>Bitbucket Password</b>: The password to use to log into bitbucket from jenkins (same comment applies as for the username).</li>
<li><b>maxVerifyChain</b>: The maximum number of builds to trigger for a single push.  Individual repositories also have this setting, but they are limited by the setting of the jenkins server as well.  Set to 0 for "no limit".  You probably want to set this to between 50% and 200% of the number of executors your jenkins instance has, depending on how long your build takes, your expected latency, and load.</li>
<li><b>Folder Support / Prefix</b>: Enabling folder support requires you have the Cloudbees Folder Plugin installed in your jenkins instance.  This allows stashbot to place builds into folders for organization.  If you select "use subfolders", you will additionally get the jobs placed into a subfolder - one per repo.  If you set a non-empty prefix, such as "stashbot", the folders/jobs will be placed under a folder by that name (which is created if it does not exist).  If you use a prefix string which contains slashes (i.e. "premerge/stashbot" you will get a nested structure (stashbot folder under the premerge folder).</li>  
</ul>
</p>
</div>
</body>
</html>
{/template}

